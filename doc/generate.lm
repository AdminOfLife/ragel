

Header: str =
	~%
	~%   Copyright 2001-2009 Adrian Thurston <thurston@complang.org>
	~%
	~
	~%   This file is part of Ragel.
	~%
	~%   Ragel is free software; you can redistribute it and/or modify
	~%   it under the terms of the GNU General Public License as published by
	~%   the Free Software Foundation; either version 2 of the License, or
	~%   (at your option) any later version.
	~%
	~%   Ragel is distributed in the hope that it will be useful,
	~%   but WITHOUT ANY WARRANTY; without even the implied warranty of
	~%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	~%   GNU General Public License for more details.
	~%
	~%   You should have received a copy of the GNU General Public License
	~%   along with Ragel; if not, write to the Free Software
	~%   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA 
	~
	~% TODO: Need a section on the different strategies for handline recursion.
	~
	~\documentclass[letterpaper,11pt,oneside]{book}
	~\usepackage{graphicx}
	~\usepackage{comment}
	~\usepackage{multicol}
	~\usepackage[
	~	colorlinks=true,
	~	linkcolor=black,
	~	citecolor=green,
	~	filecolor=black,
	~	urlcolor=black]{hyperref}
	~
	~\topmargin -0.20in
	~\oddsidemargin 0in
	~\textwidth 6.5in
	~\textheight 9in
	~
	~\setlength{\parskip}{0pt}
	~\setlength{\topsep}{0pt}
	~\setlength{\partopsep}{0pt}
	~\setlength{\itemsep}{0pt}
	~
	~\input{version}
	~
	~\newcommand{\verbspace}{\vspace{10pt}}
	~\newcommand{\graphspace}{\vspace{10pt}}
	~
	~\renewcommand\floatpagefraction{.99}
	~\renewcommand\topfraction{.99}
	~\renewcommand\bottomfraction{.99}
	~\renewcommand\textfraction{.01}   
	~\setcounter{totalnumber}{50}
	~\setcounter{topnumber}{50}
	~\setcounter{bottomnumber}{50}
	~
	~\newenvironment{inline_code}{\def\baselinestretch{1}\vspace{12pt}\small}{}
	~
	~\begin{document}
	~
	~%
	~% Title page
	~%
	~\thispagestyle{empty}
	~\begin{center}
	~\vspace*{3in}
	~{\huge Ragel State Machine Compiler}\\
	~\vspace*{12pt}
	~{\Large User Guide}\\
	~\vspace{1in}
	~by\\
	~\vspace{12pt}
	~{\large Adrian Thurston}\\
	~\end{center}
	~\clearpage
	~
	~\pagenumbering{roman}
	~
	~%
	~% License page
	~%
	~\chapter*{License}
	~Ragel version \version, \pubdate\\
	~Copyright \copyright\ 2003-2007 Adrian Thurston
	~\vspace{6mm}
	~
	~{\bf\it\noindent This document is part of Ragel, and as such, this document is
	~released under the terms of the GNU General Public License as published by the
	~Free Software Foundation; either version 2 of the License, or (at your option)
	~any later version.}
	~
	~\vspace{5pt}
	~
	~{\bf\it\noindent Ragel is distributed in the hope that it will be useful, but
	~WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
	~FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
	~details.}
	~
	~\vspace{5pt}
	~
	~{\bf\it\noindent You should have received a copy of the GNU General Public
	~License along with Ragel; if not, write to the Free Software Foundation, Inc.,
	~59 Temple Place, Suite 330, Boston, MA  02111-1307  USA}
	~
	~%
	~% Table of contents
	~%
	~\clearpage
	~\tableofcontents
	~\clearpage
	~
	~%
	~% Chapter 1
	~%
	~
	~\pagenumbering{arabic}
	~

Footer: str =
	~
	~\end{document}

lex all 
{
	token plain_line /[^.\n] [^\n]* '\n' | '\n'/

	rl hws /[ \t]+/

	token cmd_chapter /'.' hws? 'chapter' hws/
	token cmd_section /'.' hws? 'section' hws/
	token cmd_comment /'.' hws? 'comment' hws? '\n'/
}

lex dirdata
{
	token dirdata /[^\n]+/
	token nl /'\n'/
}

lex comment
{
	token comment_end /'.' hws? 'end' hws 'comment' hws?'\n'/
	token comment_line /[^\n]* '\n'/
}

def comment
	[cmd_comment line* comment_end]

def line
	[plain_line]
|	[comment]

def section
	[cmd_section dirdata nl line*]

def chapter
	[cmd_chapter dirdata nl line* section*]

def start 
	[chapter*]

parse Start: start( stdin )
if ( ! Start ) {
	print( error() '\n' )
	exit( 1 )
}

print( Header )

int printLines( Lines: line* )
{
	for L: line in repeat(Lines) {
		if match L [plain_line]
			print( L )
	}
}

for Chapter: chapter in Start {
	match Chapter
		[cmd_chapter DirData: dirdata nl Lines: line* SectionList: section*]

	print( '\\chapter{' DirData '}\n' )
	printLines( Lines )

	for Section: section in SectionList {
		match Section
			[cmd_section DirData: dirdata nl Lines: line*]

		print( '\\section{' DirData '}\n' )
		printLines( Lines )
	}
}

print( Footer )
